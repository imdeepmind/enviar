{"version":3,"sources":["../../app/controller/settings.js"],"names":["updatePassword","req","res","check","isString","isLength","min","max","isAlphanumeric","errors","validationErrors","logger","debug","boom","badRequest","messages","findQuery","username","$eq","authData","body","old","then","hash","new","update","password","userModel","findOneAndUpdate","err","doc","error","badImplementation","status","json","name","email","country","dob","gender","city","state","bio","avatar","notFound","catch","unauthorized"],"mappings":"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","file":"settings.js","sourcesContent":["import xss from 'xss';\n\nimport messages from '../messages';\nimport userModel from '../models/users';\nimport logger from '../utils/logger';\nimport { comparePassword, generatePasswordHash } from '../utils/hash';\n\nexport const updatePassword = (req, res) => {\n    req.check('old', 'Invalid old password').isString().isLength({min:4, max:24}).isAlphanumeric();\n    req.check('new', 'Invalid new password').isString().isLength({min:4, max:24}).isAlphanumeric();\n    \n    const errors = req.validationErrors();\n    if (errors) {\n        logger.debug('Validation didn\\'t succeed');\n        return res.boom.badRequest(messages['m400.2'], errors);\n    }\n\n    const findQuery = {\n        username: {$eq: xss(req.authData.username)}\n    }\n\n    generatePasswordHash(req.body.old)\n    .then(hash => {\n        comparePassword(hash, req.body.new)\n        .then(_ => {\n            generatePasswordHash(req.body.new)\n            .then(hash => {\n                const update = {\n                    password: hash\n                }\n                userModel.findOneAndUpdate(findQuery, update, (err, doc) => {\n                    if (err) {\n                        logger.error('Database error: ', err);\n                        return res.boom.badImplementation(messages['m500.0']);\n                    } else if (doc) {\n                        logger.debug(`Updated user with ${doc.username} username`);\n                        return res.status(200).json({\n                            name: doc.name,\n                            username: doc.username,\n                            email: doc.email,\n                            country: doc.country,\n                            dob: doc.dob,\n                            gender: doc.gender,\n                            city: doc.city,\n                            state: doc.state,\n                            status: doc.status,\n                            bio: doc.bio,\n                            avatar: doc.avatar\n                        });\n                    } else {\n                        logger.debug(`User with ${req.authData.username} does not exist`);\n                        return res.boom.notFound(messages['m404.0']);\n                    }\n                })\n            })\n            .catch(err => {\n                logger.error('JWT Error: ', err);\n                return res.badImplementation(messages['m500.0']);\n            })\n        })\n        .catch(err => {\n            if (err === 'm401.0'){\n                logger.debug('Wrong password');\n                return res.boom.unauthorized(messages['m401.0']);\n            } else if (err == 'm500.0'){\n                logger.error('JWT Error: ', err);\n                return res.badImplementation(messages['m500.0']);\n            }\n        })\n    })\n    .catch(err => {\n        logger.error('JWT Error: ', err);\n        return res.badImplementation(messages['m500.0']);\n    })\n}"]}