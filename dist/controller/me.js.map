{"version":3,"sources":["../../app/controller/me.js"],"names":["getMe","req","res","findQuery","$eq","authData","username","selectedField","name","email","city","state","country","gender","dob","avatar","status","bio","createdAt","updatedAt","isActive","followee","followers","userModel","findOne","err","doc","logger","error","boom","badImplementation","messages","debug","json","notFound","updateMe","check","isString","isLength","min","max","isEmail","optional","isIn","isBefore","custom","date","match","isAlphanumeric","errors","validationErrors","badRequest","update","body","Date","findOneAndUpdate","deleteMe","findOneAndRemove","updateDp","file","filename"],"mappings":"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","file":"me.js","sourcesContent":["import xss from 'xss';\n\nimport userModel from '../models/users';\nimport messages from '../messages';\nimport logger from '../utils/logger';\n\nexport const getMe = (req, res) => {\n    const findQuery = {\n        'username' : {$eq: xss(req.authData.username)}\n    }\n\n    const selectedField = {\n        username: 1, name: 1, email: 1, city: 1, state: 1, country: 1,\n        gender: 1, dob: 1, avatar: 1, status: 1, bio: 1, \n        createdAt: 1, updatedAt: 1, isActive: 1,  followee: 1, followers: 1\n    }\n\n    userModel.findOne(findQuery, selectedField, (err, doc) => {\n        if (err) {\n            logger.error('Database error: ', err);\n            return res.boom.badImplementation(messages['m500.0']);\n        } else if (doc) {\n            logger.debug(`Returned with user ${doc.username}`);\n            return res.status(200).json(doc);\n        } else {\n            logger.debug(`User with ${req.authData.username} does not exist`);\n            return res.boom.notFound(messages['m404.0']);\n        }\n    })\n}\n\nexport const updateMe = (req, res) => {\n    req.check('email', 'Invalid email').isString().isLength({min:4, max:255}).isEmail().optional();\n    req.check('name', 'Invalid name').isString().isLength({min:4, max:255}).optional();\n    req.check('gender', 'Invalid gender').isString().isIn(['m', 'f', 'o']).optional();\n    req.check('dob', 'Invalid date of birth').isString().isBefore().optional().custom(date => {\n        return date.match(/^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/);\n    });\n    req.check('country', 'Invalid country').isString().isLength({min:4, max:255}).isAlphanumeric().optional();\n    req.check('city', 'Invalid city').isString().isLength({min:4, max:255}).isAlphanumeric().optional();\n    req.check('state', 'Invalid state').isString().isLength({min:4, max:255}).isAlphanumeric().optional();\n    req.check('status', 'Invalid status').isString().isLength({min:4, max:255}).isAlphanumeric().optional();\n    req.check('bio', 'Invalid bio').isString().isLength({min:24, max:1024}).isAlphanumeric().optional();\n    \n    const errors = req.validationErrors();\n    if (errors) {\n        logger.debug('Validation didn\\'t succeed');\n        return res.boom.badRequest(messages['m400.2'], errors);\n    }\n\n    const findQuery = {\n        username: {$eq: xss(req.authData.username)}\n    }\n\n    const update = {}\n\n    if (req.body.name) update['name'] = xss(req.body.name);\n    if (req.body.email) update['email'] = xss(req.body.email);\n    if (req.body.city) update['city'] = xss(req.body.city);\n    if (req.body.state) update['state'] = xss(req.body.state);\n    if (req.body.country) update['country'] = xss(req.body.country);\n    if (req.body.gender) update['gender'] = xss(req.body.gender);\n    if (req.body.dob) update['dob'] = xss(req.body.dob);\n    if (req.body.status) update['status'] = xss(req.body.status);\n    if (req.body.bio) update['bio'] = xss(req.body.bio);\n    \n    update['updatedAt'] = Date();\n    update['isActive'] = true;\n\n    userModel.findOneAndUpdate(findQuery, update, (err, doc) => {\n        if (err) {\n            logger.error('Database error: ', err);\n            return res.boom.badImplementation(messages['m500.0']);\n        } else if (doc) {\n            logger.debug(`Updated user with ${doc.username} username`);\n            return res.status(200).json({\n                name: doc.name,\n                username: doc.username,\n                email: doc.email,\n                country: doc.country,\n                dob: doc.dob,\n                gender: doc.gender,\n                city: doc.city,\n                state: doc.state,\n                status: doc.status,\n                bio: doc.bio,\n                avatar: doc.avatar\n            });\n        } else {\n            logger.debug(`User with ${req.authData.username} does not exist`);\n            return res.boom.notFound(messages['m404.0']);\n        }\n    })\n    \n}\n\nexport const deleteMe = (req, res) => {\n    const findQuery = {\n        username: {$eq: xss(req.authData.username)}\n    }\n\n    userModel.findOneAndRemove(findQuery, (err, doc) => {\n        if (err) {\n            logger.error('Database error: ', err);\n            return res.boom.badImplementation(messages['m500.0']);\n        } else if (doc) {\n            logger.debug(`Deleted user with username ${req.authData.username}`);\n            return res.status(200).json({\n                username: req.authData.username\n            });\n        } else {\n            logger.debug(`User with ${req.authData.username} does not exist`);\n            return res.boom.notFound(messages['m404.0']);\n        }\n    })\n}\n\nexport const updateDp = (req, res) => {\n    const findQuery = {\n        username: xss(req.authData.username)\n    }\n\n    const update = {\n        avatar: req.file.filename\n    }\n\n    userModel.findOneAndUpdate(findQuery, update, (err, doc) => {\n        if (err) {\n            logger.error('Database error: ', err);\n            return res.boom.badImplementation(messages['m500.0']);\n        } else if (doc) {\n            logger.debug(`Updated avatar of user with ${doc.username} username`);\n            return res.status(200).json({\n                avatar: req.file.filename + '.jpg'\n            });\n        } else {\n            logger.debug(`User with ${req.authData.username} does not exist`);\n            return res.boom.notFound(messages['m404.0']);\n        }\n    })\n}"]}