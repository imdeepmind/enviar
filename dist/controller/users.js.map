{"version":3,"sources":["../../app/controller/users.js"],"names":["getOne","req","res","findQuery2","username","$eq","authData","selectedField","name","email","city","state","country","gender","dob","avatar","status","bio","createdAt","updatedAt","isActive","followee","followers","selectedField2","blocked","userModel","findOne","err","doc1","logger","error","boom","badImplementation","messages","includes","params","findQuery","doc","debug","data","toJSON","isFollowee","isBlocked","json","notFound","getAll","page","Number","query","limit","length","$ne","find","skip","i","dt","push"],"mappings":"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","file":"users.js","sourcesContent":["import xss from 'xss';\n\nimport userModel from '../models/users';\nimport logger from '../utils/logger';\nimport messages from '../messages';\n\nexport const getOne = (req, res) => {\n    const findQuery2 = {\n        username: {$eq: xss(req.authData.username)}\n    }\n\n    const selectedField = {\n        username: 1, name: 1, email: 1, city: 1, state: 1, country: 1,\n        gender: 1, dob: 1, avatar: 1, status: 1, bio: 1,\n        createdAt: 1, updatedAt: 1, isActive: 1,  followee: 1, followers: 1\n    }\n\n    const selectedField2 = {\n        blocked: 1,\n        followee: 1,\n        followers: 1\n    }\n\n    userModel.findOne(findQuery2, selectedField2, (err, doc1) => {\n        if (err){\n            logger.error('Database error: ', err);\n            return res.boom.badImplementation(messages['m500.0']);\n        } else {\n            if (!doc1.blocked.includes(req.params.username)){\n                const findQuery = {\n                    username: {$eq: xss(req.params.username)},\n                }\n\n                userModel.findOne(findQuery, selectedField, (err, doc) => {\n                    if (err) {\n                        logger.error('Database error: ', err);\n                        return res.boom.badImplementation(messages['m500.0']);\n                    } else if (doc) {\n                        logger.debug(`Returned with user ${doc.username}`);\n\n                        let data = doc.toJSON();\n\n                        if (doc1.followers.includes(req.authData.username))\n                            data['isFollowers'] = true;\n                        else\n                            data['isFollowers'] = false;\n\n                        if (doc1.followee.includes(req.authData.username))\n                            data.isFollowee = true;\n                        else\n                            data.isFollowee = false;\n\n                        if (doc1.blocked.includes(req.authData.username))\n                            data.isBlocked = true;\n                        else\n                            data.isBlocked = false;\n\n                        return res.status(200).json(data);\n                    } else {\n                        logger.debug(`User with ${doc.username} does not exist`);\n                        return res.boom.notFound(messages['m404.0']);\n                    }\n                })\n            } else {\n                logger.debug(`User with ${req.params.username} does not exist`);\n                return res.boom.notFound(messages['m404.0']);\n            }\n        }\n    })\n}\n\nexport const getAll = (req, res) => {\n    let page = Number(xss(req.query.page));\n    let limit = Number(xss(req.query.limit));\n\n    if (!page || page < 0) page = 0;\n    if (!limit || limit <= 0) limit = 10;\n\n    const findQuery2 = {\n        username: {$eq: xss(req.authData.username)}\n    }\n\n    const selectedField = {\n        username: 1, name: 1, email: 1, city: 1, state: 1, country: 1,\n        gender: 1, dob: 1, avatar: 1, status: 1, bio: 1,\n        createdAt: 1, updatedAt: 1, isActive: 1,  followee: 1, followers: 1\n    }\n\n    const selectedField2 = {\n        blocked: 1,\n        followee: 1,\n        followers: 1\n    }\n\n    userModel.findOne(findQuery2, selectedField2, (err, doc1) => {\n        if (err) {\n            logger.error('Database error: ', err);\n            return res.boom.badImplementation(messages['m500.0']);\n        } else {\n            let findQuery = {}\n            if (doc1.blocked.length > 0){\n                findQuery = {\n                    username: {$ne: xss(req.authData.username)},\n                    username: {$ne: doc1.blocked}\n                }\n            } else {\n                findQuery = {\n                    username: {$ne: xss(req.authData.username)}\n                }\n            }\n\n            userModel.find(findQuery, selectedField, {limit: limit, skip: page * limit}, (err, doc) => {\n                if (err) {\n                    logger.error('Database error: ', err);\n                    return res.boom.badImplementation(messages['m500.0']);\n                } else if (doc) {\n                    logger.debug(`Returned some users`);\n\n                    let data = [];\n\n                    for (let i = 0; i< doc.length; i++){\n                        let dt = doc[i].toJSON();\n                        if (doc1.followers.includes(dt.username))\n                            dt['isFollowers'] = true;\n                        else\n                            dt['isFollowers'] = false;\n\n                        if (doc1.followee.includes(dt.username))\n                            dt.isFollowee = true;\n                        else\n                            dt.isFollowee = false;\n\n                        if (doc1.blocked.includes(dt.username))\n                            dt.isBlocked = true;\n                        else\n                            dt.isBlocked = false;\n\n                        data.push(dt);\n                    }\n\n                    return res.status(200).json(data);\n                } else {\n                    logger.debug(`User with ${doc.username} does not exist`);\n                    return res.boom.notFound(messages['m404.0']);\n                }\n            })\n        }\n    })\n}\n"]}