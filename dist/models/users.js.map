{"version":3,"sources":["../../app/models/users.js"],"names":["schema","mongoose","Schema","_id","Types","ObjectId","username","type","String","required","index","unique","min","max","trim","password","name","email","city","state","country","gender","enum","dob","Date","avatar","status","bio","createdAt","default","now","updatedAt","lastLoginAt","tokenHash","isActive","Boolean","followee","followers","blocked","model"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,SAASC,mBAASC,MAAT,CAAgB;AAC3BC,SAAKF,mBAASC,MAAT,CAAgBE,KAAhB,CAAsBC,QADA;AAE3BC,cAAU;AACNC,cAAMC,MADA;AAENC,kBAAU,IAFJ;AAGNC,eAAO,IAHD;AAINC,gBAAQ,IAJF;AAKNC,aAAK,CALC;AAMNC,aAAK,EANC;AAONC,cAAM;AAPA,KAFiB;AAW3BC,cAAU;AACNR,cAAMC,MADA;AAENC,kBAAU;AAFJ,KAXiB;AAe3BO,UAAM;AACFT,cAAMC,MADJ;AAEFC,kBAAU,IAFR;AAGFG,aAAK,CAHH;AAIFC,aAAK;AAJH,KAfqB;AAqB3BI,WAAO;AACHV,cAAMC,MADH;AAEHC,kBAAU,IAFP;AAGHG,aAAK,CAHF;AAIHC,aAAK,GAJF;AAKHF,gBAAQ,IALL;AAMHG,cAAM;AANH,KArBoB;AA6B3BI,UAAK;AACDX,cAAMC,MADL;AAEDI,aAAK,CAFJ;AAGDC,aAAK;AAHJ,KA7BsB;AAkC3BM,WAAO;AACHZ,cAAMC,MADH;AAEHI,aAAK,CAFF;AAGHC,aAAK;AAHF,KAlCoB;AAuC3BO,aAAS;AACLb,cAAMC,MADD;AAELC,kBAAU,IAFL;AAGLG,aAAK,CAHA;AAILC,aAAK;AAJA,KAvCkB;AA6C3BQ,YAAQ;AACJd,cAAMC,MADF;AAEJC,kBAAU,IAFN;AAGJa,cAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX;AAHF,KA7CmB;AAkD3BC,SAAK;AACDhB,cAAMiB,IADL;AAEDf,kBAAU;AAFT,KAlDsB;AAsD3BgB,YAAQ;AACJlB,cAAMC;AADF,KAtDmB;AAyD3BkB,YAAQ;AACJnB,cAAMC,MADF;AAEJI,aAAK,CAFD;AAGJC,aAAK;AAHD,KAzDmB;AA8D3Bc,SAAK;AACDpB,cAAMC,MADL;AAEDI,aAAK,EAFJ;AAGDC,aAAK;AAHJ,KA9DsB;AAmE3Be,eAAW;AACPrB,cAAMiB,IADC;AAEPK,iBAASL,KAAKM;AAFP,KAnEgB;AAuE3BC,eAAW;AACPxB,cAAMiB,IADC;AAEPK,iBAASL,KAAKM;AAFP,KAvEgB;AA2E3BE,iBAAa;AACTzB,cAAMiB,IADG;AAETK,iBAASL,KAAKM;AAFL,KA3Ec;AA+E3BG,eAAW;AACP1B,cAAMC;AADC,KA/EgB;AAkF3B0B,cAAU;AACN3B,cAAM4B,OADA;AAENN,iBAAS;AAFH,KAlFiB;AAsF3BO,cAAU,EAtFiB;AAuF3BC,eAAW,EAvFgB;AAwF3BC,aAAS;AAxFkB,CAAhB,CAAf;;kBA2FerC,mBAASsC,KAAT,CAAe,OAAf,EAAwBvC,MAAxB,C","file":"users.js","sourcesContent":["import mongoose from 'mongoose';\n\nconst schema = mongoose.Schema({\n    _id: mongoose.Schema.Types.ObjectId,\n    username: {\n        type: String,\n        required: true,\n        index: true,\n        unique: true,\n        min: 4,\n        max: 24,\n        trim: true,\n    },\n    password: {\n        type: String,\n        required: true,\n    },\n    name: {\n        type: String,\n        required: true,\n        min: 4,\n        max: 255,\n    },\n    email: {\n        type: String,\n        required: true,\n        min: 4, \n        max: 255,\n        unique: true,\n        trim: true,\n    },\n    city:{\n        type: String,\n        min: 4,\n        max: 255,\n    },\n    state: {\n        type: String,\n        min: 4,\n        max: 255,\n    },\n    country: {\n        type: String,\n        required: true,\n        min: 4,\n        max: 255,\n    },\n    gender: {\n        type: String,\n        required: true,\n        enum: ['m', 'f', 'o']\n    },\n    dob: {\n        type: Date,\n        required: true,\n    },\n    avatar: {\n        type: String,\n    },\n    status: {\n        type: String,\n        min: 4,\n        max: 255,\n    },\n    bio: {\n        type: String,\n        min: 24,\n        max: 1024,\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now,\n    },\n    updatedAt: {\n        type: Date,\n        default: Date.now\n    },\n    lastLoginAt: {\n        type: Date,\n        default: Date.now\n    },\n    tokenHash: {\n        type: String,\n    },\n    isActive: {\n        type: Boolean,\n        default: true,\n    },\n    followee: [],\n    followers: [],\n    blocked: []\n});\n\nexport default mongoose.model('Users', schema);"]}